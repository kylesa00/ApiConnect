/*
 * Webshop Service API
 *
 * Webshop services connect Webshop applications to ERP system. The entry point of Webshop API is `/customers/{companyName}/{customerNr}`, which is called by Webshop application whenever a user logs in. If the customer requestedOrderPosition by its number could be found, the response contains a `_links` section, which contains all possible navigations and actions the customer can take.
 *
 * OpenAPI spec version: 2.0-draftAv
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    [ApiExplorerSettings(IgnoreApi = true)]
    public class InvoicesApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieves representation of an invoice which is given by its id.</remarks>
        /// <param name="company">The company to which the webshop belongs, e.g. &#39;Derendinger-Switzerland&#39;.</param>
        /// <param name="customerNr">Path parameter of the number of the customer.</param>
        /// <param name="invoiceId">Path parameter of id of requested invoice.</param>
        /// <response code="200">Successful response provides the requested invoice information.</response>
        /// <response code="400">If the provided company name is invalid, the service responds with a 400 (Bad Request) status.</response>
        /// <response code="404">If the invoice with given id does not exist, the service responds with a 404 (Not Found) status.</response>
        [HttpGet]
        [Route("/apps/prod-webshop-service-app/webshop-service/invoices/{company}/{customerNr}/{invoiceId}")]
        [ValidateModelState]
        [SwaggerOperation("GetInvoiceById")]
        [SwaggerResponse(statusCode: 200, type: typeof(Invoice), description: "Successful response provides the requested invoice information.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorInfo), description: "If the provided company name is invalid, the service responds with a 400 (Bad Request) status.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorInfo), description: "If the invoice with given id does not exist, the service responds with a 404 (Not Found) status.")]
        public virtual IActionResult GetInvoiceById([FromRoute][Required]string company, [FromRoute][Required]string customerNr, [FromRoute][Required]string invoiceId)
        { 
           
            string exampleJson = null;
            exampleJson = "{\n  \"zipcode\" : \"zipcode\",\n  \"country\" : \"country\",\n  \"amount\" : 0.8008281904610115,\n  \"invoiceNr\" : \"invoiceNr\",\n  \"customerNr\" : \"customerNr\",\n  \"city\" : \"city\",\n  \"_links\" : {\n    \"key\" : {\n      \"href\" : \"href\"\n    }\n  },\n  \"name\" : \"name\",\n  \"invoiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"termOfPayment\" : \"termOfPayment\",\n  \"paymentType\" : \"paymentType\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Invoice>(exampleJson)
            : default(Invoice);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieves the representation of a list of positions for a list of invoices given by their number.</remarks>
        /// <param name="company">The company to which the webshop belongs, e.g. &#39;Derendinger-Switzerland&#39;.</param>
        /// <param name="customerNr">The number of the customer.</param>
        /// <param name="invoiceNrs">A list of invoice numbers seperated by comma</param>
        /// <param name="page">The number of the page to be retrieved, defaults to the first page. The page parameter should not be provided explicitly, but the usage of &#x60;next&#x60; and &#x60;prev&#x60; links of the response is recommended.</param>
        /// <response code="200">Successful response returns the entire list of positions of given invoice.</response>
        /// <response code="400">If the provided company name is invalid, the service responds with a 400 (Bad Request) status.</response>
        /// <response code="404">If the invoices given by their number donot exist, the service endpoint responds with a 404 (Not Found) status.</response>
        [HttpGet]
        [Route("/apps/prod-webshop-service-app/webshop-service/invoices/{company}/{customerNr}/positions")]
        [ValidateModelState]
        [SwaggerOperation("GetInvoiceListPositions")]
        [SwaggerResponse(statusCode: 200, type: typeof(InvoicePositions), description: "Successful response returns the entire list of positions of given invoice.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorInfo), description: "If the provided company name is invalid, the service responds with a 400 (Bad Request) status.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorInfo), description: "If the invoices given by their number donot exist, the service endpoint responds with a 404 (Not Found) status.")]
        public virtual IActionResult GetInvoiceListPositions([FromRoute][Required]string company, [FromRoute][Required]string customerNr, [FromQuery][Required()]string invoiceNrs, [FromQuery]int? page)
        { 
           
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"key\" : {\n      \"href\" : \"href\"\n    }\n  },\n  \"invoicePositions\" : [ {\n    \"sequence\" : 1465812981,\n    \"amount\" : 6.027456183070403,\n    \"quantity\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"articleId\" : \"articleId\",\n    \"deliveryNoteNr\" : \"deliveryNoteNr\",\n    \"orderNr\" : \"orderNr\"\n  }, {\n    \"sequence\" : 1465812981,\n    \"amount\" : 6.027456183070403,\n    \"quantity\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"articleId\" : \"articleId\",\n    \"deliveryNoteNr\" : \"deliveryNoteNr\",\n    \"orderNr\" : \"orderNr\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InvoicePositions>(exampleJson)
            : default(InvoicePositions);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieves url that points to the pdf of the given invoice nr.</remarks>
        /// <param name="company">The company to which the webshop belongs, e.g. &#39;Derendinger-Switzerland&#39;.</param>
        /// <param name="customerNr">Path parameter of the number of the customer.</param>
        /// <param name="invoiceNr">Path parameter of nr of requested invoice.</param>
        /// <response code="200">Successful response provides the requested url.</response>
        /// <response code="400">If the provided company name is invalid, the service responds with a 400 (Bad Request) status.</response>
        /// <response code="404">If the invoice with given nr does not exist, the service responds with a 404 (Not Found) status.</response>
        [HttpGet]
        [Route("/apps/prod-webshop-service-app/webshop-service/invoices/{company}/{customerNr}/{invoiceNr}/pdf")]
        [ValidateModelState]
        [SwaggerOperation("GetInvoicePdf")]
        [SwaggerResponse(statusCode: 200, type: typeof(UrlEntry), description: "Successful response provides the requested url.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorInfo), description: "If the provided company name is invalid, the service responds with a 400 (Bad Request) status.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorInfo), description: "If the invoice with given nr does not exist, the service responds with a 404 (Not Found) status.")]
        public virtual IActionResult GetInvoicePdf([FromRoute][Required]string company, [FromRoute][Required]string customerNr, [FromRoute][Required]string invoiceNr)
        { 
           
            string exampleJson = null;
            exampleJson = "{\n  \"url\" : \"url\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UrlEntry>(exampleJson)
            : default(UrlEntry);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieves the representation of a list of positions for an invoice given by its number.</remarks>
        /// <param name="company">The company to which the webshop belongs, e.g. &#39;Derendinger-Switzerland&#39;.</param>
        /// <param name="customerNr">The number of the customer.</param>
        /// <param name="invoiceNr">The number of the invoice.</param>
        /// <param name="sequence">The sequence number of the position in the invoice.</param>
        /// <param name="orderNr">An order number of the invoice.</param>
        /// <response code="200">Successful response returns the entire list of positions of given invoice.</response>
        /// <response code="400">If the provided company name is invalid, the service responds with a 400 (Bad Request) status.</response>
        /// <response code="404">If the invoice given by its number does not exist, the service endpoint responds with a 404 (Not Found) status.</response>
        [HttpGet]
        [Route("/apps/prod-webshop-service-app/webshop-service/invoices/{company}/{customerNr}/{invoiceNr}/positions/{sequence}")]
        [ValidateModelState]
        [SwaggerOperation("GetInvoicePosition")]
        [SwaggerResponse(statusCode: 200, type: typeof(InvoicePositions), description: "Successful response returns the entire list of positions of given invoice.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorInfo), description: "If the provided company name is invalid, the service responds with a 400 (Bad Request) status.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorInfo), description: "If the invoice given by its number does not exist, the service endpoint responds with a 404 (Not Found) status.")]
        public virtual IActionResult GetInvoicePosition([FromRoute][Required]string company, [FromRoute][Required]string customerNr, [FromRoute][Required]string invoiceNr, [FromRoute][Required]long? sequence, [FromQuery][Required()]string orderNr)
        { 
            
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"key\" : {\n      \"href\" : \"href\"\n    }\n  },\n  \"invoicePositions\" : [ {\n    \"sequence\" : 1465812981,\n    \"amount\" : 6.027456183070403,\n    \"quantity\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"articleId\" : \"articleId\",\n    \"deliveryNoteNr\" : \"deliveryNoteNr\",\n    \"orderNr\" : \"orderNr\"\n  }, {\n    \"sequence\" : 1465812981,\n    \"amount\" : 6.027456183070403,\n    \"quantity\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"articleId\" : \"articleId\",\n    \"deliveryNoteNr\" : \"deliveryNoteNr\",\n    \"orderNr\" : \"orderNr\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InvoicePositions>(exampleJson)
            : default(InvoicePositions);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieves the representation of a list of positions for an invoice given by its number.</remarks>
        /// <param name="company">The company to which the webshop belongs, e.g. &#39;Derendinger-Switzerland&#39;.</param>
        /// <param name="customerNr">The number of the customer.</param>
        /// <param name="invoiceNr">The number of the invoice.</param>
        /// <param name="orderNr">An order number of the invoice.</param>
        /// <param name="packingSlipNr">A packing slip number of the invoice.</param>
        /// <param name="page">The number of the page to be retrieved, defaults to the first page. The page parameter should not be provided explicitly, but the usage of &#x60;next&#x60; and &#x60;prev&#x60; links of the response is recommended.           </param>
        /// <response code="200">Successful response returns the entire list of positions of given invoice.</response>
        /// <response code="400">If the provided company name is invalid, the service responds with a 400 (Bad Request) status.</response>
        /// <response code="404">If the invoice given by its number does not exist, the service endpoint responds with a 404 (Not Found) status.</response>
        [HttpGet]
        [Route("/apps/prod-webshop-service-app/webshop-service/invoices/{company}/{customerNr}/{invoiceNr}/positions")]
        [ValidateModelState]
        [SwaggerOperation("GetInvoicePositions")]
        [SwaggerResponse(statusCode: 200, type: typeof(InvoicePositions), description: "Successful response returns the entire list of positions of given invoice.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorInfo), description: "If the provided company name is invalid, the service responds with a 400 (Bad Request) status.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorInfo), description: "If the invoice given by its number does not exist, the service endpoint responds with a 404 (Not Found) status.")]
        public virtual IActionResult GetInvoicePositions([FromRoute][Required]string company, [FromRoute][Required]string customerNr, [FromRoute][Required]string invoiceNr, [FromQuery]string orderNr, [FromQuery]string packingSlipNr, [FromQuery]int? page)
        { 
           
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"key\" : {\n      \"href\" : \"href\"\n    }\n  },\n  \"invoicePositions\" : [ {\n    \"sequence\" : 1465812981,\n    \"amount\" : 6.027456183070403,\n    \"quantity\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"articleId\" : \"articleId\",\n    \"deliveryNoteNr\" : \"deliveryNoteNr\",\n    \"orderNr\" : \"orderNr\"\n  }, {\n    \"sequence\" : 1465812981,\n    \"amount\" : 6.027456183070403,\n    \"quantity\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"articleId\" : \"articleId\",\n    \"deliveryNoteNr\" : \"deliveryNoteNr\",\n    \"orderNr\" : \"orderNr\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InvoicePositions>(exampleJson)
            : default(InvoicePositions);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieves representation of a list of invoices for a customer.  At least one query must be used, and the dateFrom/dateTo parameters, should be used as a pair, with a date span of 31 days.</remarks>
        /// <param name="company">The company to which the webshop belongs, e.g.&#39;Derendinger-Switzerland&#39;.</param>
        /// <param name="customerNr">Path parameter of the number of the customer.</param>
        /// <param name="dateFrom">The start date of range for invoice selection in ISO 8601 format.</param>
        /// <param name="dateTo">The end date of range for invoice selection in ISO 8601 format.</param>
        /// <param name="orderNr">An order number of the invoice.</param>
        /// <param name="packingSlipNr">A packing slip number of the invoice.</param>
        /// <response code="200">Successful retrieval of the invoices of the customer results in an HTTP status of 200 (OK)</response>
        /// <response code="400">If the provided company name is invalid, the service responds with a 400 (Bad Request) status.</response>
        /// <response code="404">If the customer has no invoices or customer does not exist, endpoint responds with a 404 (Not Found) status.</response>
        [HttpGet]
        [Route("/apps/prod-webshop-service-app/webshop-service/invoices/{company}/{customerNr}")]
        [ValidateModelState]
        [SwaggerOperation("GetInvoices")]
        [SwaggerResponse(statusCode: 200, type: typeof(Invoices), description: "Successful retrieval of the invoices of the customer results in an HTTP status of 200 (OK)")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorInfo), description: "If the provided company name is invalid, the service responds with a 400 (Bad Request) status.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorInfo), description: "If the customer has no invoices or customer does not exist, endpoint responds with a 404 (Not Found) status.")]
        public virtual IActionResult GetInvoices([FromRoute][Required]string company, [FromRoute][Required]string customerNr, [FromQuery]DateTime? dateFrom, [FromQuery]DateTime? dateTo, [FromQuery]string orderNr, [FromQuery]string packingSlipNr)
        { 
            
            string exampleJson = null;
            exampleJson = "{\n  \"invoices\" : [ {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"amount\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"customerNr\" : \"customerNr\",\n    \"city\" : \"city\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"name\" : \"name\",\n    \"invoiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"termOfPayment\" : \"termOfPayment\",\n    \"paymentType\" : \"paymentType\"\n  }, {\n    \"zipcode\" : \"zipcode\",\n    \"country\" : \"country\",\n    \"amount\" : 0.8008281904610115,\n    \"invoiceNr\" : \"invoiceNr\",\n    \"customerNr\" : \"customerNr\",\n    \"city\" : \"city\",\n    \"_links\" : {\n      \"key\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"name\" : \"name\",\n    \"invoiceDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"termOfPayment\" : \"termOfPayment\",\n    \"paymentType\" : \"paymentType\"\n  } ],\n  \"_links\" : {\n    \"key\" : {\n      \"href\" : \"href\"\n    }\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Invoices>(exampleJson)
            : default(Invoices);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
